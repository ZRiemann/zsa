#!/bin/bash

alias docker='sudo docker'
alias docker-compose='sudo docker-compose'

cmd_dir=$(pwd)
cd ${0%/*}
cd ../..

enable_dbg=0
. ./base.sh
cd $cmd_dir


echo_msg "Demo Dockerfile"
echo

dir=friendlyhello
sudo rm -fr $dir
mkdir $dir
cd $dir

echo_msg "1. verify http_proxy"
evn_http_proxy=""
env_https_proxy=""
if [ -n "$http_proxy" ]; then
    echo_msg "$http_proxy"
    echo_msg "$https_proxy"
    sleep 2
    env_http_proxy="ENV http_proxy $http_proxy"
    env_https_proxy="ENV https_proxy $https_proxy"
fi

echo_msg '2. verify DNS
/etc/docker/daemon.json
{
  "dns": ["your_dns_address", "8.8.8.8"]
}
'
sleep 1

echo "
# Use an official Python runtime as a parent image
FROM python:2.7-slim

# Set the working directory to /app
WORKDIR /app

# Copy the current directory contents into the container at /app
COPY . /app

# Install any needed packages specified in requirements.txt
RUN pip install --trusted-host pypi.python.org -r requirements.txt

# Make port 80 available to the world outside this container
EXPOSE 80

# Define environment variable
ENV NAME World
${env_http_proxy}
${env_https_proxy}

# Run app.py when the container launches
CMD [\"python\", \"app.py\"]
" > Dockerfile
echo_msg '3. Make Documentfile'
sleep 1

echo "
Flask
Redis
" > requirements.txt
echo_msg '4. Make requriemants.txt for python pip'
sleep 1

echo "from flask import Flask
from redis import Redis, RedisError
import os
import socket

# Connect to Redis
redis = Redis(host=\"redis\", db=0, socket_connect_timeout=2, socket_timeout=2)

app = Flask(__name__)

@app.route(\"/\")
def hello():
    try:
        visits = redis.incr(\"counter\")
    except RedisError:
        visits = \"<i>cannot connect to Redis, counter disabled</i>\"

    html = \"<h3>Hello {name}!</h3>\" \
           \"<b>Hostname:</b> {hostname}<br/>\" \
           \"<b>Visits:</b> {visits}\"
    return html.format(name=os.getenv(\"NAME\", \"world\"), hostname=socket.gethostname(), visits=visits)

if __name__ == \"__main__\":
    app.run(host='0.0.0.0', port=80)
" > app.py
echo_msg 'Make app.py'
sleep 1
ls

echo_msg 'docker build --tag=friendlyhello:v0.0.1 .'
sleep 1
docker build --tag=friendlyhello:v0.0.1 .

echo_msg 'docker image ls'
sleep 1
docker image ls

echo_msg 'docker run -p 4000:80 friendlyhello:v0.0.1'
echo_msg "try http://localhost:4000 on browser"
sleep 1
docker run -p 4000:80 friendlyhello:v0.0.1

cd $cmd_dir
exit 0